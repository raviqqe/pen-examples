import System'Os

type Node {
  first \() any
  rest List
}

type List = \() Node | none

concatenateLists = \(x List) List {
  \() Node | none {
    if z = x(); Node {
      concatenateLists(z.rest)
      none
    } else {
      none
    }
  }
}

main = \(ctx Os'Context) number {
  concatenateLists(
    \() Node | none {
      Node{first: \() any { none }, rest: \() Node | none { none }}
    },
  )()

  0
}
